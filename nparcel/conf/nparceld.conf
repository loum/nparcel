[db]

[transsend_db]
#host =
#user =
#password =
#port =
#sid =

[dirs]
in = /var/ftp/pub/nparcel/priority/in
pe_in = /var/ftp/pub/nparcel/gis/in
archive = /data/nparcel/archive
staging_base = /var/ftp/pub/nparcel
signature = /data/www/nparcel/data/signature
comms = /data/nparcel/comms
aggregator = /data/nparcel/aggregate

[timeout]
loader_loop = 30
pe_loop = 30
reminder_loop = 3600
comms_loop = 30
exporter_loop = 300
filter_loop = 30

[business_units]
Priority = 1
Fast = 2
Ipec = 3

[files]
# t1250_file_format represents the standard T1250 filename structure
# t1250_file_format = T1250_TOL.*\.txt

# Loader parses filename to determine the Business Unit.
# The number relates to the business_unit.id column.
[file_bu]
TOLP = 1
TOLF = 2
TOLF_NSW = 2
TOLF_VIC = 2
TOLF_QLD = 2
TOLF_SA = 2
TOLF_WA = 2
TOLF_ACT = 2
TOLI = 3

# Business unit based conditions map.
# Each character in the string relates to a True ('1') or False ('0') flag.
# Since each BU has special requirements around the same functionality,
# this mapping control BU-specific behaviour in the logic.  For
# example, Priority handles a missing item_number by simply copying over
# the connote whilst Ipec raises an exception.
#
# Add conditions to the string but NOTE -- position is important!
# Highlight the position meaning as you progress.
# Pos 01: 0 copies connote to missing item_number
#         1 raises an exception for a missing item_number
# Pos 02: 0 do not send email
#         1 send email
# Pos 03: 0 do not send SMS
#         1 send SMS
# Pos 04: 0 archive .ps files
#         1 send .ps files
# Pos 05: 0 archive .png files
#         1 send .png files
# Pos 06: 0 not state based reporting
#         1 state based reporting
# Pos 07: 0 do not suppress Primary Elect POD exports
#         1 suppress Primary Elect POD exports
# Pos 08: 0 do not copy T1250 files to the aggregator directory
#         1 copy T1250 files to the aggregator directory
# Pos 09: 0 do not send comms if service_code 1
#         1 send comms if service_code 1
# Pos 10: 0 do not send comms if service_code 2
#         1 send comms if service_code 2
# Pos 11: 0 do not send comms if service_code 4
#         1 send comms if service_code 4
# Pos 12: 0 use default loader comms template if service_code 4
#         1 use delayed pickup comms template if service_code 4
# Pos 13: 0: do not ignore service_code 4
#         1: ignore service_code 4
# Pos 14: 0: disable Primary Elect notifications
#         1: enable Primary Elect notifications
# Pos 15: 0: disable Service Code 4 on delivery notification
#         1: enable Service Code 4 on delivery notifications
[conditions]
#      000000000111111
#      123456789012345
TOLP = 000100000000010
TOLF = 000101100000010
TOLI = 100010000000010

[email]
support = loumar@tollgroup.com

# Proxy details allow for HTTP* based calls via the Toll proxy.
[proxy]
#host = auproxy-farm.toll.com.au
#user = loumar
#password =
#port = 8080
#protocol = https

# Control the order in which the exporter displays column positions.
# The SQL produces rows in the following order
#
# 0: REF1
# 1: JOB_KEY
# 2: PICKUP_TIME
# 3: PICKUP_POD
# 4: IDENTITY_TYPE
# 5: IDENTITY_DATA
# 6: ITEM_NBR
# 7: AGENT_ID
# 8: AGENT_STATE
#
# You can control ordering by providing a comma separated list of indexes.
# The default is 0,1,2,3,4,5,6
[exporter_fields]
tolp = 0,1,2,3,4,5,6
tolf = 0,1,2,3,4,5,6
toli = 0,1,2,3,4,5,6,7

[rest]
#sms_scheme = https
sms_api = https://api.esendex.com/v1.0/messagedispatcher
sms_user =
sms_pw =

email_api = https://apps.cinder.co/tollgroup/wsemail/emailservice.svc/sendemail
email_user =
email_pw =
failed_email = loumar@tollgroup.com

[reminder]
# notification_delay is the period (in seconds) that triggers a reminder
# notice.
#notification_delay = 345600

# start_date ignores records whose created_ts occurs before this date.
#start_date = 2013-10-09 00:00:00

# hold_period defines the time period (in seconds) since the
# job_item.created_ts that the agent will hold the parcel before being
# returned.
#hold_period = 691200

[comms]
# skip_days is a list of days to not send messages.  To avoid confusion,
# enter the full day name (Monday) separated by commas.
#skip_days = Sunday

# send_time_ranges are time ranges when comms can be sent.  Use
# 24 hour format and ensure that the times are day delimited.  Ranges
# must be separated with a hyphen '-' and use format HH:MM
# Multiple ranges are separated with commas.
#send_time_ranges = 08:00-19:00

# comms_queue_warning is the threshold limit that will invoke a warning
# email to support if breached.
#comms_queue_warning = 100

# comms_queue_error is the threshold limit that will invoke an error
# email to support if breached and terminate the npcommsd daemon.
#comms_queue_error = 1000

[primary_elect]
# File format represents the filename structure to parse for Primary Elect
# inbound.  This was prepared during development so it may change later on.
# Better to adjust it via config then in code.
#file_format = T1250_TOL[PIF]_\d{14}\.dat

# Each T1250 should contain a YYYYMMDD sequence that defines date.  This is
# used by the archiver.  The file_archive_string captures the regular
# expression grouping that defines the date.
#file_archive_string = T1250_TOL[PIF]_(\d{8})\d{6}\.dat

# customer is the upstream provider of the T1250 files.
# This by default is GIS.
#customer = gis

# inbound_mts is the MTS Delivery Report directory.
#inbound_mts = /data/nparcel/mts

# mts_filename_format is the MTS Delivery Report filename format as
# expressed as a Python regular expression string.
# mts_filename_format = mts_delivery_report_\d{14}\.csv

[filter]
# customer is the downstream recipient of filtered T1250 files.
#customer = parcelpoint

[transsend]
# delivered_header string that represents the TransSend column header name
# for a delivered item ``)
#delivered_header = latest_scan_event_action

#  delivered_event_key is the string that represents a delivered event
#delivered_event_key = delivered
