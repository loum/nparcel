#!/usr/bin/python

import os
import inspect

import nparcel
from nparcel.utils.log import (log,
                               set_log_level,
                               set_console,
                               rollover)

REPORTS = ['uncollected',
           'compliance',
           'noncompliance',
           'exception',
           'totals',
           'collected']


def main():
    config_file = os.path.join(os.path.expanduser('~'),
                               '.nparceld',
                               'nparceld.conf')

    based = nparcel.BaseD(config=config_file)
    based.set_command('start')
    script_name = inspect.getfile(inspect.currentframe())
    script_name = os.path.basename(script_name)
    based.set_script_name(script_name)
    r = '<%s>' % '|'.join(REPORTS)
    based.parser.set_usage('usage: %prog [options] ' + r)
    based.check_args()

    report = None
    try:
        report = based.args.pop(0)
    except IndexError, err:
        based.parser.error('No report defined')
    if report not in REPORTS:
        based.parser.error('Report "%s" not supported' % report)

    if based.options.dry is not None:
        set_console()
    else:
        rollover()

    # Enable detailed logging if required.
    if based.options.verbose == 0:
        set_log_level('INFO')
    else:
        log.info('Logging verbosity set to "DEBUG" level')

    # OK, start processing.
    rep = nparcel.ReporterDaemon(report,
                                 pidfile=based.pidfile,
                                 dry=based.dry,
                                 config=based.options.config)

    based.set_batch(True)
    based.launch_command(rep, script_name)

if __name__ == '__main__':
    main()
