#!/usr/bin/python

import os
import inspect
import signal

import nparcel
from nparcel.utils.log import (log,
                               set_log_level,
                               set_console,
                               rollover)


class PostcodeDaemon(nparcel.utils.Daemon):

    def __init__(self,
                 pidfile,
                 dry=False,
                 config='nparcel.conf'):
        super(PostcodeDaemon, self).__init__(pidfile=pidfile)

        self.dry = dry

        self.config = nparcel.B2CConfig(file=config)
        self.config.parse_config()

    def _start(self, event):
        signal.signal(signal.SIGTERM, self._exit_handler)

        loader = nparcel.Loader(db=self.config.db_kwargs(),
                                comms_dir=self.config.comms_dir)

        loader.verify_postcodes(dry=self.dry)


def main():
    based = nparcel.BaseD()
    based.set_command('start')
    script_name = inspect.getfile(inspect.currentframe())
    script_name = os.path.basename(script_name)
    based.set_script_name(script_name)
    based.parser.set_usage('usage: %prog [options]')
    based.check_args()

    if based.options.dry is not None:
        set_console()
    else:
        rollover()

    # Enable detailed logging if required.
    if based.options.verbose == 0:
        set_log_level('INFO')
    else:
        log.info('Logging verbosity set to "INFO" level')

    # OK, start processing.
    pd = PostcodeDaemon(pidfile=based.pidfile,
                        dry=based.dry,
                        config=based.options.config)

    based.set_batch(True)
    based.launch_command(pd, script_name)

if __name__ == '__main__':
    main()
